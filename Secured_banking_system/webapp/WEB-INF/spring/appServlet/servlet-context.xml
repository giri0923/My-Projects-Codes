<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
 	
<!--  	<beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="basename" value="/WEB-INF/conf/messages" />
   	</beans:bean> -->
   	
	<context:component-scan base-package="com.noblebanking.action" />

	<!-- Creating instance of datasource. It is similar to Driver Manager -->
	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver"></beans:property>
		<beans:property name="url"
			value="jdbc:mysql://localhost:3306/nobledb"></beans:property>
		<beans:property name="username" value="root"></beans:property>
		<beans:property name="password" value="'123456'"></beans:property>
	</beans:bean>

	<beans:bean id="userDao" class="com.noblebanking.dao.UserDao">
		<beans:property name="jdbcTemplate" ref="jdbcTemplate"></beans:property>
		<beans:property name="userRowMapper" ref="userRowMapper" />
	</beans:bean>

	<beans:bean id="adminDao" class="com.noblebanking.dao.AdminDao">
		<beans:property name="jdbcTemplate" ref="jdbcTemplate"></beans:property>
		<beans:property name="transactionRowMapper" ref="transactionRowMapper" />
		<beans:property name="internalUserRowMapper" ref="internalUserRowMapper" />
		<beans:property name="userRowMapper" ref="userRowMapper" />
		<beans:property name="iDRowMapper" ref="iDRowMapper" />
	</beans:bean>
	
	<beans:bean id="employeeDao" class="com.noblebanking.dao.EmployeeDao">
		<beans:property name="jdbcTemplate" ref="jdbcTemplate"></beans:property>
		<beans:property name="transactionRowMapper" ref="transactionRowMapper" />
		<beans:property name="internalUserRowMapper" ref="internalUserRowMapper" />
	</beans:bean>
	
	<beans:bean id="merchantDao" class="com.noblebanking.dao.MerchantDao">
		<beans:property name="jdbcTemplate" ref="jdbcTemplate"></beans:property>
		<beans:property name="userRowMapper" ref="userRowMapper" />
	</beans:bean>

	<!-- using above dataSource object we created a JdbcTemplate object -->
	<beans:bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
	</beans:bean>

	<!-- Helper Instance -->
	<beans:bean name="userRowMapper" class="com.noblebanking.util.UserRowMapper">
	</beans:bean>
	<beans:bean name="internalUserRowMapper"
		class="com.noblebanking.util.InternalUserRowMapper">
	</beans:bean>
	<beans:bean name="iDRowMapper"
		class="com.noblebanking.util.IDRowMapper">
	</beans:bean>
	<beans:bean name="transactionRowMapper"
		class="com.noblebanking.util.TransactionRowMapper">
	</beans:bean>
	<!-- Session clears after back button -->
	<interceptors>
       <beans:bean id="webContentInterceptor"
           class="org.springframework.web.servlet.mvc.WebContentInterceptor">
           <beans:property name="cacheSeconds" value="0" />
           <beans:property name="useExpiresHeader" value="true" />
           <beans:property name="useCacheControlHeader" value="true" />
           <beans:property name="useCacheControlNoStore" value="true" />
       </beans:bean>
   </interceptors>

</beans:beans>
